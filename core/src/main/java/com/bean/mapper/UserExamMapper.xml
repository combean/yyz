<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bean.dao.UserExamMapper">
  <resultMap id="BaseResultMap" type="com.bean.model.UserExam">
    <id column="user_exam_id" jdbcType="INTEGER" property="userExamId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="exam_id" jdbcType="INTEGER" property="examId" />
    <result column="user_username" jdbcType="VARCHAR" property="userUsername" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_class_id" jdbcType="INTEGER" property="userClassId" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="user_mobile" jdbcType="VARCHAR" property="userMobile" />
    <result column="user_sex" jdbcType="BIT" property="userSex" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="exam_name" jdbcType="VARCHAR" property="examName" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="exam_minutes" jdbcType="INTEGER" property="examMinutes" />
    <result column="exam_type" jdbcType="BIT" property="examType" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="subject_name" jdbcType="VARCHAR" property="subjectName" />
    <result column="place_id" jdbcType="INTEGER" property="placeId" />
    <result column="place_name" jdbcType="VARCHAR" property="placeName" />
  </resultMap>
  <sql id="where">
    <where>
      <if test="userExamId != null">
        AND ue.user_exam_id = #{userExamId,jdbcType=INTEGER}
      </if>
      <if test="userId != null">
        AND ue.user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="examId != null">
        AND ue.exam_id = #{examId,jdbcType=INTEGER}
      </if>
    </where>
  </sql>
  <insert id="insertList" parameterType="java.util.List">
    insert into exm_user_exam (user_id, exam_id
    )
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.userId,jdbcType=INTEGER}, #{item.examId,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insert" parameterType="com.bean.model.UserExam">
    insert into exm_user_exam (user_id, exam_id
    )
    values
    (#{userId,jdbcType=INTEGER}, #{examId,jdbcType=INTEGER})
  </insert>
  <delete id="deleteByUserId" parameterType="java.lang.Integer">
    delete from exm_user_exam
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <select id="getListByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT
    ue.user_exam_id, ue.user_id, ue.exam_id,
    u.user_username, u.user_password, u.user_class_id, u.user_mobile, u.user_email, u.user_name, u.user_sex, c.class_name,
    e.exam_name, e.start_time, e.end_time, e.exam_minutes, e.exam_type, e.place_id, p.place_name, e.paper_id, e.subject_id, s.subject_name
    FROM
    exm_user_exam  AS ue
    INNER JOIN exm_user AS u ON ue.user_id=u.user_id
    INNER JOIN exm_class AS c ON u.user_class_id=c.class_id
    INNER JOIN exm_exam AS e ON ue.exam_id=e.exam_id
    INNER JOIN exm_subject AS s ON e.subject_id=s.subject_id
    INNER JOIN exm_place AS p ON e.place_id=p.place_id
    <include refid="where" />
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from exm_user_exam
    where user_exam_id = #{userExamId,jdbcType=INTEGER}
  </delete>
  <select id="getCountByMap" parameterType="java.util.Map" resultType="int">
    SELECT COUNT(*)
    FROM exm_user_exam AS ue
    <include refid="where" />
  </select>


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_exam_id, user_id, exam_id
  </sql>
  <select id="selectByExample" parameterType="com.bean.model.UserExamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exm_user_exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exm_user_exam
    where user_exam_id = #{userExamId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exm_user_exam
    where user_exam_id = #{userExamId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.model.UserExamExample">
    delete from exm_user_exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.bean.model.UserExam">
    insert into exm_user_exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userExamId != null">
        user_exam_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="examId != null">
        exam_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userExamId != null">
        #{userExamId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="examId != null">
        #{examId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.model.UserExamExample" resultType="java.lang.Long">
    select count(*) from exm_user_exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exm_user_exam
    <set>
      <if test="record.userExamId != null">
        user_exam_id = #{record.userExamId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.examId != null">
        exam_id = #{record.examId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exm_user_exam
    set user_exam_id = #{record.userExamId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      exam_id = #{record.examId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.model.UserExam">
    update exm_user_exam
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="examId != null">
        exam_id = #{examId,jdbcType=INTEGER},
      </if>
    </set>
    where user_exam_id = #{userExamId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.model.UserExam">
    update exm_user_exam
    set user_id = #{userId,jdbcType=INTEGER},
      exam_id = #{examId,jdbcType=INTEGER}
    where user_exam_id = #{userExamId,jdbcType=INTEGER}
  </update>
</mapper>