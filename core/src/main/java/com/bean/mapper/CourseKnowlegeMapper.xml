<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bean.dao.CourseKnowledgeMapper">
  <resultMap id="BaseResultMap" type="com.bean.model.CourseKnowledge">
    <id column="course_knowledge_id" jdbcType="INTEGER" property="courseKnowledgeId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="knowledge_id" jdbcType="INTEGER" property="knowledgeId" />
  </resultMap>
  <sql id="Base_Column_List">
    course_knowledge_id, course_id, knowledge_id
  </sql>
  <sql id="where">
    <where>
      <if test="courseKnowledgeId != null">
        AND ck.course_knowledge_id = #{courseKnowledgeId,jdbcType=INTEGER}
      </if>
      <if test="courseId != null">
        AND ck.course_id = #{courseId,jdbcType=INTEGER}
      </if>
      <if test="knowledgeId != null">
        AND ck.knowledge_id = #{knowledgeId,jdbcType=INTEGER}
      </if>
    </where>
  </sql>
  <insert id="insertList" parameterType="java.util.List">
    insert into exm_course_knowledge (course_id, knowledge_id
    )
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.courseId,jdbcType=INTEGER}, #{item.knowledgeId,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insert" parameterType="com.bean.model.CourseKnowledge">
    insert into exm_course_knowledge (course_id, knowledge_id
    )
    values
    (#{courseId,jdbcType=INTEGER}, #{knowledgeId,jdbcType=INTEGER})
  </insert>
  <delete id="deleteByCourseId" parameterType="java.lang.Integer">
    delete from exm_course_knowledge
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <select id="getCourseKnowledgeListByInfo" parameterType="com.bean.model.CourseKnowledge" resultMap="BaseResultMap">
    SELECT
    ck.course_knowledge_id, ck.course_id, ck.knowledge_id, c.course_name, k.knowledge_name
    FROM
    exm_course_knowledge  AS ck
    INNER JOIN exm_course AS c ON ck.course_id=c.course_id
    INNER JOIN exm_knowledge AS k ON ck.knowledge_id=k.knowledge_id
    <include refid="where" />
  </select>
  <delete id="deleteByCourseKnowledgeId" parameterType="java.lang.Integer">
    delete from exm_course_knowledge
    where course_knowledge_id = #{CourseKnowledgeId,jdbcType=INTEGER}
  </delete>
  <select id="getCountByInfo" parameterType="com.bean.model.CourseKnowledge" resultType="int">
    SELECT COUNT(*)
    FROM exm_course_knowledge AS ck
    <include refid="where" />
  </select>


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="selectByExample" parameterType="com.bean.model.CourseKnowledgeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exm_course_knowledge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exm_course_knowledge
    where course_knowledge_id = #{courseKnowledgeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exm_course_knowledge
    where course_knowledge_id = #{courseKnowledgeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.model.CourseKnowledgeExample">
    delete from exm_course_knowledge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.bean.model.CourseKnowledge">
    insert into exm_course_knowledge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseKnowledgeId != null">
        course_knowledge_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="knowledgeId != null">
        knowledge_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseKnowledgeId != null">
        #{courseKnowledgeId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="knowledgeId != null">
        #{knowledgeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.model.CourseKnowledgeExample" resultType="java.lang.Long">
    select count(*) from exm_course_knowledge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exm_course_knowledge
    <set>
      <if test="record.courseKnowledgeId != null">
        course_knowledge_id = #{record.courseKnowledgeId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.knowledgeId != null">
        knowledge_id = #{record.knowledgeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exm_course_knowledge
    set course_knowledge_id = #{record.courseKnowledgeId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      knowledge_id = #{record.knowledgeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.model.CourseKnowledge">
    update exm_course_knowledge
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="knowledgeId != null">
        knowledge_id = #{knowledgeId,jdbcType=INTEGER},
      </if>
    </set>
    where course_knowledge_id = #{courseKnowledgeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.model.CourseKnowledge">
    update exm_course_knowledge
    set course_id = #{courseId,jdbcType=INTEGER},
      knowledge_id = #{knowledgeId,jdbcType=INTEGER}
    where course_knowledge_id = #{courseKnowledgeId,jdbcType=INTEGER}
  </update>
</mapper>